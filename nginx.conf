upstream puma {
  server 0.0.0.0:3000;
}

server {
    server_name  datenightdinnertime.com www.datenightdinnertime.com;

    client_max_body_size 200m;
    gzip             on;
    gzip_comp_level  4;
    gzip_min_length  1000;
    gzip_proxied     expired no-cache no-store private auth;
    gzip_types       text/plain application/javascript application/json application/x-javascript text/xml text/css application/xml text/javascript;

    root /app/datenightdinnertime/public;

    location / {
      try_files $uri/index.html $uri @app;
    }

    location  ~* ^/assets {
      root /app/datenightdinnertime/public;
      expires 1y;
      add_header Cache-Control public;
      add_header Last-Modified "";
      add_header ETag "";
      break;
    }

    error_page 500 502 503 504 /500.html;

    location @app {
      proxy_pass http://puma;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $http_host;
      proxy_redirect off;
    }

    location ~ /.well-known {
      allow all;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/datenightdinnertime.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/datenightdinnertime.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.datenightdinnertime.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = datenightdinnertime.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name  datenightdinnertime.com www.datenightdinnertime.com;

    listen 80;
    return 404; # managed by Certbot
}

